pipeline {
	agent {
        	label 'Loyaltri-Node'
	}
	stages {
        stage('Clean Workspace') {
            steps {
               deleteDir() // Clean the workspace
            }
        }
        stage('Download Artifacts') {
            steps {
            echo "Artifact: build-${ENV_NAME}-${BUILD_NUMBER}.tgz"
            withAWS(credentials: 'storage-build-packages', region: 'us-east-1'){
		s3Download(file: "build-${ENV_NAME}-${BUILD_NUMBER}.tgz", bucket:'build-package-testing', path: "build-${ENV_NAME}-${BUILD_NUMBER}.tgz", force:true)
            	}
            }
        }
	stage('Deploy app') {
		environment{
                REMOTE_USER = 'ubuntu'
                REMOTE_HOST = '13.201.164.185'
                REMOTE_PATH = '/var/www/demo_cd'
                TEMP_PATH = '/home/ubuntu/cd_zipfiles'
            }
            steps {
                script {
		echo "Artifact: build-${ENV_NAME}-${BUILD_NUMBER}.tgz"
		withCredentials([sshUserPrivateKey(credentialsId: '9339375a-d1d6-42e6-94f0-482b07d7080b', keyFileVariable: 'SSH_KEY')]) {
			sh 'pwd; ls -l;whoami;ifconfig -a'
			sh "scp -o StrictHostKeyChecking=no -i ${SSH_KEY} build-${ENV_NAME}-${BUILD_NUMBER}.tgz ${REMOTE_USER}@${REMOTE_HOST}:${TEMP_PATH}"
                        sh """
                          ssh -o StrictHostKeyChecking=no -i ${SSH_KEY} ${REMOTE_USER}@${REMOTE_HOST} -- pwd;ls -l ${TEMP_PATH}
			"""
			}
		}
		}
	}
	stage('TEST app'){
		steps {
		echo "is the app running!"
		}
	}
    }
    post {
        always {
            // Clean up workspace after build
            cleanWs()
        }
    }
}
